[tool.poetry]
name = "template-basic-python" # make sure the refrence to 'template-basic-python' is updated
version = "0.1.0"
description = "Basic python starter template"
readme = "README.md"
authors = ["purple_emily <purple_emily@protonmail.com>"]
license = "MIT"
repository = "https://github.com/purple-emily/template-basic-python"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
# keywords = []


[tool.poetry.dependencies]
dynaconf = "^3.1.7"
loguru = "^0.6"
python = "^3.10"
typer = {extras = ["all"], version = "^0.4.0"}


[tool.poetry.dev-dependencies]
black = "^22.1.0"
bump2version = "^1.0.1"
coverage = {extras = ["toml"], version = "^6.3.2"}
coverage-badge = "^1.1.0"
isort = "^5.10.1"
mypy = "^0.931"
pre-commit = "^2.17.0"
safety = "^1.10.3"
taskipy = "^1.10.1"

# flake8 + plugins
darglint = "^1.8.1"
flake8 = "^4.0.1"
flake8-bugbear = "^22.1.11"
flake8-comprehensions = "^3.8.0"
flake8-docstrings = "^1.6.0"
flake8-type-checking = "^1.3.2"
flake8-pytest-style = "^1.6.0"
pep8-naming = "^0.12.1"

# pytest + plugins
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
pytest-randomly = "^3.11.0"


[tool.poetry.scripts]
example = "template_basic_python.main:main"


[tool.taskipy.tasks]
lint = { cmd = "task _isort_diff && task _black_diff && task _mypy && task _flake8 && task _poetry_check && task _safety", help = "lint the code" }
format = { cmd = "task _isort && task _black", help = "format the code" }
test = { cmd = "task _pytest && task _coverage_badge", help = "test the code" }
all = { cmd = "task format && task lint && task test", help = "format, lint, then test the code" }
_isort = "isort --settings-path pyproject.toml ./src tests"
_isort_diff = "isort --diff --check-only --settings-path pyproject.toml ./src tests"
_black = "black --config pyproject.toml ./src tests"
_black_diff = "black --diff --check --config pyproject.toml ./src tests"
_mypy = "mypy --config-file pyproject.toml ./src"
_flake8 = "flake8 --config=.flake8"
_poetry_check = "poetry check"
_safety = "safety check --full-report"
_pytest = "pytest -c pyproject.toml"
_coverage_badge = "coverage-badge -o assets/images/coverage.svg -f"


[tool.isort]
profile = "black"


[tool.coverage.run]
branch = true
source = ["template_basic_python"]
data_file = ".cache/.coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "TYPE_CHECKING",
    "if __name__ == .__main__.:"
]


[tool.pytest.ini_options]
minversion = "7.0"
# --cov-report types: term-missing, annotate, html, xml
addopts = """
--cov-report term-missing
--cov-fail-under=55
--cov
-r a
--strict-markers
"""
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow" # (deselect with '-m "not slow"')
]

cache_dir = ".cache/pytest/"


[tool.mypy]
python_version = 3.9
strict = true
strict_equality = true

show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true

warn_no_return = true
warn_unreachable = true

cache_dir = ".cache/mypy/"

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
